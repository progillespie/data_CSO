cat1,
cat2,
plot.title,
units,
stat,
lt.year
)
# Add a legend and we're done
legend(1992,700,
c(cat1,cat2),
lty=c(1,2),
lwd=c(1.5,1.5),
bty="n"
)
writeLines(paste("...Created plot: \t",plot.title,sep=""))
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("MilkProduction//AKA01.csv"))
data
data <- data.table(read.csv("MilkProduction//AKM01.csv"))
data
data[,Year:=as.numeric(substr(Month,1,4))]
data_monthly <- data
rm(data_monthly)
data[,always.true:=T]
keycols <- c("Statistic", "Domestic.or.Import.Source", "Year")
setkeyv(data,keycols)
data[,lt95:= Year<1000000]
keycols <- c("Statistic", "Domestic.or.Import.Source", "lt95")
setkeyv(data,keycols)
data <- data_monthly[J(T,stat, T),list(.SD, mean), by=list(Year,of.interest)]
data_monthly <- data
data <- data_monthly[J(T,stat, T),list(.SD, mean), by=list(Year,of.interest)]
setkeyv(data_monthly,keycols)
data_monnthly[,of.interest:= Statistic=="Fat Content (%)"]
data_monthly[,of.interest:= Statistic=="Fat Content (%)"]
keycols <- c("of.interest", "Domestic.or.Import.Source", "lt95")
setkeyv(data_monthly,keycols)
data <- data_monthly[J(T,stat, T),list(.SD, mean), by=list(Year,of.interest)]
stat <- "Domestic"
data <- data_monthly[J(T,stat, T),list(.SD, mean), by=list(Year,of.interest)]
data <- data_monthly[J(T,"Domestic", T)]
data <- data_monthly[J(T,"Domestic", T), list(.SD, mean)]
data <- data_monthly[J(T,"Domestic", T), Fat.Content:=mean(value), by=Year)]
data <- data_monthly[J(T,"Domestic", T), Fat.Content:=mean(value), by=Year]
data
data <- data_monthly[J(T,"Domestic", T),mean(value), by=Year]
data
data <- data_monthly[J(T,"Domestic", T), mean(value), by=list(Year, of.interest)]
data
data <- data_monthly[J(T,"Domestic", T), mean(value), by=list(Year, Domestic.or.Import.Source)]
data
data <- data_monthly[J(T,"Domestic", T), mean(value), by=list(Year, Statistic)]
data
data <- data_monthly[, mean(value), by=list(Year, Statistic, Domestic.or.Import.Source)]
data
data <- data_monthly[, mean("value"), by=c(keycols), with=F]
keycols
keycols <- c("Statistic", "Domestic.or.Import.Source", "Year")
data <- data_monthly[, mean("value"), by=c(keycols), with=F]
data <- data_monthly[, mean("value"), by=list(keycols), with=F]
data <- data_monthly[, mean("value"), by=c(keycols), with=F]
data <- data_monthly[, mean("value"), by=keycols, with=F]
data <- data_monthly[, mean(value), by=list(keycols)]
data <- data_monthly[, mean(value), by=data[[keycols]]]
names(keycols)
names(list(keycols))
list(keycols)
data <- data_monthly[, mean(value), by=data_monthly[[keycols]]]
data <- data_monthly
data <- data[, mean(value), by=data_monthly[[keycols]]]
data_monthly[[keycols]]
data_monthly[[keycols[1:3]]]
keycols
paste(keycols, sep=""")
)
")
paste(keycols, sep='"')
paste(keycols[1:3])
str(keycols)
data(,keycols, with=F)
data[,keycols,with=F]
name(data[,keycols,with=F])
names(data[,keycols,with=F])
keycols[[1]]
data[[keycols]]
data[[keycols[1]]]
data[[keycols[1:3]]]
data[[keycols[1],keycols[2],keycols[3]]]
data[[keycols[1]:keycols[3]]]
data[[list(keycols[1],keycols[2],keycols[3])]]
data[[list(keycols[1]& keycols[2] & keycols[3])]]
data[[list(keycols[1]| keycols[2] | keycols[3])]]
data[, data:=mean(value), by=data_monthly[[keycols]]]
data[, data:=mean("value"), by=list(keycols), with=F]
data[, data:=mean("value"), by=keycols, with=F]
data[,mean("value"), by=keycols, with=F]
data[, mean(value), by=keycols]
source('D:/Data/data_CSO/code_R/investigate_1984.R')
source('D:/Data/data_CSO/code_R/investigate_1984.R', echo=TRUE)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("MilkProduction//AKM01.csv"))
keycols <- c("Statistic", "Domestic.or.Import.Source", "Year")
try(data[,Year := as.numeric(substr(data$Month,1,4))] , silent=T)
setkeyv(data, keycols)
data_monthly <- data
data <- data_monthly[,mean(value), by=keycols]
data[,lt95:= Year < lt.year]
data[,of.interest := data[[keycols[1]]]==cat1 |
data[[keycols[1]]]==cat2   ]
# Use those as keys
altkeycols <- c("of.interest",keycols[2] ,"lt95")
setkeyv(data, altkeycols)
#  Plot both together (as a single series first to get scale of axes
#  correct, then put in our vertical line. Points should be same
#  color as background to make them invisible.
time.var <- keycols[3]
# Scatterplot of the two series
plot(data[J(T,stat, T), c(time.var, "value"),with=F],
col="white",
ylab=units,
main=plot.title)
data[J(T,stat, T), abline(v=1984)]
source('D:/Data/data_CSO/code_R/investigate_1984.R')
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Print some messages
writeLines("\n\nChanged to data directory...")
print(getwd())
writeLines("\n\n...Script running...\n\n")
# Save default plot parameters, and set my preferred changes
orig.plot.par <- par(no.readonly=T)
par(family="serif", bty="l")
#-----------------------------------------------------------
# Define function to import, manipulate, and plot data
#-----------------------------------------------------------
plotCSO <- function(data.path,
keycols,
cat1,
cat2,
plot.title,
units,
stat,
lt.year)      {
# Import the data
data <- data.table(read.csv(data.path))
data <- data[,always.true:=T]
# Make sure that there is a year variable (for monthly series)
try(data[,Year := as.numeric(substr(data$Month,1,4))] , silent=T)
# Set key variables (sorts and allows subsetting)
setkeyv(data, keycols)
# Make annual data if specified
data_monthly <- data
data <- data_monthly[,mean(value), by=keycols]
# Create indicator vars for selecting rows
data[,lt95:= Year < lt.year]
data[,of.interest := data[[keycols[1]]]==cat1 |
data[[keycols[1]]]==cat2   ]
# Use those as keys
altkeycols <- c("of.interest",keycols[2] ,"lt95")
setkeyv(data, altkeycols)
#  Plot both together (as a single series first to get scale of axes
#  correct, then put in our vertical line. Points should be same
#  color as background to make them invisible.
time.var <- keycols[3]
# Scatterplot of the two series
plot(data[J(T,stat, T), c(time.var, "value"),with=F],
col="white",
ylab=units,
main=plot.title)
data[J(T,stat, T), abline(v=1984)]
# Now draw the lines using two calls to points()
altkeycols <- c(keycols[1:2],"lt95") # have to reset keys first
setkeyv(data, altkeycols)
points(data[J(cat1,stat, T), c(time.var,"value"),with=F],
type="l",
lty=1,
lwd=1.5
)
points(data[J(cat2,stat, T), c(time.var,"value"),with=F],
type="l",
lty=2,
lwd=1.5
)
}
#-----------------------------------------------------------
# End of function definition
#-----------------------------------------------------------
#====================================================================
# End of Head
#====================================================================
# Plotting
#====================================================================
# Options common to all plots
lt.year    <- 1000000 # Set ridiculously if you want all available
# Herd populations
#---------------------
# Set function arguments specific to this plot
data.path  <- "LivestockandFarmNumbers//AAA02.csv"
keycols    <- c("Type.of.Animal","always.true", "Year")
cat1       <- "Dairy cows"
cat2       <- "Other cows"
plot.title <- "Herd populations"
units      <- "1,000 head"
stat       <- T
# Stats available for chosen stats variable:
levels(paste("data$",keycols[2],sep=""))
# Generate plot
plotCSO(data.path,
keycols,
cat1,
cat2,
plot.title,
units,
stat,
lt.year
)
# Add a legend and we're done
legend(1992,700,
c(cat1,cat2),
lty=c(1,2),
lwd=c(1.5,1.5),
bty="n"
)
writeLines(paste("...Created plot: \t",plot.title,sep=""))
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Print some messages
writeLines("\n\nChanged to data directory...")
print(getwd())
writeLines("\n\n...Script running...\n\n")
# Save default plot parameters, and set my preferred changes
orig.plot.par <- par(no.readonly=T)
par(family="serif", bty="l")
#-----------------------------------------------------------
# Define function to import, manipulate, and plot data
#-----------------------------------------------------------
plotCSO <- function(data.path,
keycols,
cat1,
cat2,
plot.title,
units,
stat,
lt.year)      {
# Import the data
data <- data.table(read.csv(data.path))
data <- data[,always.true:=T]
# Make sure that there is a year variable (for monthly series)
try(data[,Year := as.numeric(substr(data$Month,1,4))] , silent=T)
# Set key variables (sorts and allows subsetting)
setkeyv(data, keycols)
# Make annual data if specified
data_monthly <- data
data <- data_monthly[,mean(value), by=keycols]
# Create indicator vars for selecting rows
data[,lt95:= Year < lt.year]
data[,of.interest := data[[keycols[1]]]==cat1 |
data[[keycols[1]]]==cat2   ]
# Use those as keys
altkeycols <- c("of.interest",keycols[2] ,"lt95")
setkeyv(data, altkeycols)
#  Plot both together (as a single series first to get scale of axes
#  correct, then put in our vertical line. Points should be same
#  color as background to make them invisible.
time.var <- keycols[3]
# Scatterplot of the two series
plot(data[J(T,stat, T), c(time.var, "value"),with=F],
col="white",
ylab=units,
main=plot.title)
data[J(T,stat, T), abline(v=1984)]
# Now draw the lines using two calls to points()
altkeycols <- c(keycols[1:2],"lt95") # have to reset keys first
setkeyv(data, altkeycols)
points(data[J(cat1,stat, T), c(time.var,"value"),with=F],
type="l",
lty=1,
lwd=1.5
)
points(data[J(cat2,stat, T), c(time.var,"value"),with=F],
type="l",
lty=2,
lwd=1.5
)
}
#-----------------------------------------------------------
# End of function definition
#-----------------------------------------------------------
#====================================================================
# End of Head
#====================================================================
# Plotting
#====================================================================
# Options common to all plots
lt.year    <- 1000000 # Set ridiculously if you want all available
# Herd populations
#---------------------
# Set function arguments specific to this plot
data.path  <- "LivestockandFarmNumbers//AAA02.csv"
keycols    <- c("Type.of.Animal","always.true", "Year")
cat1       <- "Dairy cows"
cat2       <- "Other cows"
plot.title <- "Herd populations"
units      <- "1,000 head"
stat       <- T
# Stats available for chosen stats variable:
levels(paste("data$",keycols[2],sep=""))
# Generate plot
plotCSO(data.path,
keycols,
cat1,
cat2,
plot.title,
units,
stat,
lt.year
)
# Add a legend and we're done
legend(1992,700,
c(cat1,cat2),
lty=c(1,2),
lwd=c(1.5,1.5),
bty="n"
)
writeLines(paste("...Created plot: \t",plot.title,sep=""))
vignette(datatable-intor)
vignette(datatable-intro)
vignette("datatable-intro")
??data.table
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data
colnames(data)[,"V1"] <- "value"
data
data[,colnames(V1) <- "value"]
help(data.table)
help colnames
help(colnames)
data
data[,V1]
colnames(data)[V1]
colnames(data)["V1"]
colnames(data)[,"V1"]
colnames(data)[,V1]
colnames(data)
colnames(data)["V1"]
colnames(data)[["V1"]]
colnames(data)[4]
source('D:/Data/data_CSO/code_R/investigate_1984.R')
warnings()
source('D:/Data/data_CSO/code_R/investigate_1984.R')
levels(data$Statistic)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("MilkProduction//AKM01.csv"))
data
data <- data.table(read.csv("MilkProduction//AKM03.csv"))
data
levels(data$Product)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
levels(data$Product)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("MilkProduction//AKM02.csv"))
daat
data
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("AgricultureAreaUsedandCropProduction//AQA02.csv"))
data
levels(data$Type.of.Land.Use)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
levels(data$Type.of.Land.Use)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("AgricultureLabourandSizeofHoldings//ASKL1.csv"))
data
levels(data$Type.of.Work)
data
levels(data$Statistic)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data
setkey(data,"Receiving.Benefits.or.Not")
source('D:/Data/data_CSO/code_R/investigate_1984.R')
tables()
rm(data_monthly)
tables()
data["Total", .SD]
source('D:/Data/data_CSO/code_R/investigate_1984.R')
rm(list=ls())
data <- data.table(read.csv("AgricultureLabourandSizeofHoldings//ASKL2.csv"))
data
levels(data$Age.Group)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
data <- data.table(read.csv("AgricultureLabourandSizeofHoldings//ASKL3.csv"))
data
levels(data$Size.of.Farm.Workforce)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
source('~/.active-rstudio-document')
source('D:/Data/data_CSO/code_R/investigate_1984.R')
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
dir
dir9
dir()
dir(../../)
dir("../../")
dir("../../../")
dir("../../../code_R/")
dir("../../../code_R/CSO_data_import.R")
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
source("../../../code_R/CSO_data_import.R", echo=F)
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
rm(list=ls())
# What happened around 1984? Uses CSO stats.
#====================================================================
# Head
#====================================================================
# Load required packages
library(data.table)
# Save starting location and change to data directory
startdir <- getwd()
origdata <- "D://Data//data_CSO//OrigData//BusinessSectors//AgricultureandFishing/"
setwd(origdata)
# Pull down the latest CSO data
source("../../../code_R/CSO_data_import.R", echo=F)
source('D:/Data/data_CSO/code_R/CSO_data_import.R', echo=TRUE)
rm(list=ls())
source('D:/Data/data_CSO/code_R/CSO_data_import.R', echo=TRUE)
source('D:/Data/data_CSO/code_R/investigate_1984.R')
getwd()
setwd("D://Data")
source('D:/Data/data_CSO/code_R/investigate_1984.R')
